name: React/Next.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Necessary for tags fetching

      # Linting step
      - name: Lint
        run: |
          npm install
          npm run lint

      # Get previous tag
      - name: Get previous tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
          # Set default version if no previous tag found
      - name: Set default version if no previous tag found
        id: setdefaultversion
        run: echo "::set-output name=tag::0.1.0"
        if: steps.previoustag.outputs.tag == ''

      # Calculate next semantic version
      - name: Get next semantic version
        id: semver
        uses: WyriHaximus/github-action-next-semvers@v1
        with:
          version: ${{ steps.previoustag.outputs.tag || steps.setdefaultversion.outputs.tag }}

      # Set up QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to GitHub Container Registry
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      # Docker build and push with semantic versioning
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/leisair-ml:${{ steps.semver.outputs.patch }}
          build-args: VERSION=${{ steps.semver.outputs.patch }}

      # Optionally, create a GitHub release for the new version
      - name: Create GitHub Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.semver.outputs.patch }}
          release_name: Release ${{ steps.semver.outputs.patch }}
